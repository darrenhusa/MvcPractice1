// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using MvcPractice1.Models;
using System;

namespace MvcPractice1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20181027221531_Supplier")]
    partial class Supplier
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MvcPractice1.Models.Item", b =>
                {
                    b.Property<int>("ItemId");

                    b.Property<decimal>("Cost");

                    b.Property<string>("Description");

                    b.Property<decimal>("SellingPrice");

                    b.Property<string>("SupplierCode");

                    b.Property<int>("UnitsOnHand");

                    b.HasKey("ItemId");

                    b.HasIndex("SupplierCode");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("MvcPractice1.Models.Supplier", b =>
                {
                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.Property<string>("Telephone");

                    b.HasKey("Code");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("MvcPractice1.Models.Item", b =>
                {
                    b.HasOne("MvcPractice1.Models.Supplier", "Supplier")
                        .WithMany("Items")
                        .HasForeignKey("SupplierCode");
                });
#pragma warning restore 612, 618
        }
    }
}
